ls [option(en)] [Argument(e)]
    -a          # versteckte Daten (.versteckt) anzeigen
    -l          # Auflisten von Berechtigungen, Anzahl der Hardlinks,
                # Eigentümer, besitzende Gruppe Größe Zeitstempel Datei
    -d          # Anzeigen des aktuellen Verzeichnisses
                # (nur in Kombination mit -l empfohlen)
    -i          # Anzeigen von Inodennummern
    -F          # Typisierte Anzeige (z.B. dir/ anstelle von dir)



cd [option(en)] [Verzeichnis]
    -           # Wechsel in vorheriges Verzeichnis
    ~           # Wechsel in aktuelles Heimatverzeichnis
    ~Name       # Wechsel in das aktuelle Heimatverzeichnis von Name
                # (nur als root)
                .. # Wechsel in das übergeordnete Verzeichnis
                / # Wechsel in das Wurzelverzeichnis


touch [option(en)] [Argument(e)]
    -a          # Nur die Zugriffszeit ändern
    -m          # Nur die Modifikationszeit ändern
    -c          # Keine Datei erstellen (auch --no-create)




rm [Option(en)] [Argument(e)]
    -i          # interaktives Löschen (Wollen Sie wirklich?)
    -r          # rekursives Löschen (Verzeichnisse hinabsteigen)
    -f          # Aktion erzwingen (force) und nicht vorhandene Dateien
                # ignorieren.
    -v          # Geschwätzigkeit / Anzeigen der Aktionen


mkdir / rmdir [option(en)] [Argument(e)]
    -p          # Erstellt ein Verzeichnis mit Elternzweig,
                # falls dieser nicht mit angegeben ist.


cp [option(en)] Quelle Ziel
    -r          # rekursives kopieren
    -f          # Aktion erzwingen (force)
    -i          # interaktiver Modus
    -l          # anstatt zu kopieren, wird ein Hardlink erstellt.
    -s          # anstatt zu kopieren, wird ein Softlink erstellt.
    -d          # Verknüpfungen beim Kopieren nicht folgen.
    -v          # Geschwätzigkeit

mv [Option(en)] Quelle Ziel
    -i          # interaktiver Modus (Wollen Sie überschreiben?)
    -v          # Geschwätzigkeit / Anzeigen der Aktionen


ln [Option(en)] Quelle Ziel
    -s          # Erstellen eines Softlinks
    -v          # Geschwätzigkeit


    $alias list="ls -dLi"           #alias anlegen
    $alias                          #gestzte aliase ansehen
    $unalias list                   #alias Löschen

type                                #Mit Hilfe von type, kann man nachvollziehen von welcher Position im
                                    Dateisystem aus, ein Befehl ausgeführt wird (/bin,/sbin,/usr/bin...), die
                                    Position des Binaries (Befehls) im Arbeitsspeicher gehalten wird (hashed)
                                    oder ob der Befehl zur Shell (shell-builtin) gehört.



stat                                #mit stat kann man sich die "Zeiten" einer Datei anzeigen lassen

hash
hash [Option(en)]
    -r              # Alle Positionen vergessen (Hash leeren)
    -t              # Ausgabe des vollen Pfadnamens
    -l              # Neuformatieren der Ausgabe zur Nutzung als Eingabe
    -d     hashwert # Entfernen eines einzelnen Hashwertes
                                    #Sollte die Position eines oder mehrerer Befehle (Binaries) im
                                    Arbeitsspeicher gehalten werden und ins Leere laufen (z.B. wegen
                                    zwischenzeitlichen Verschiebens), kann mit dem Befehl hash, diesen
                                    Speicherinhalt modifizieren.


history [Option(en)]
    N             # Ausgabe der N zuletzt angegebenen Befehle
    -c            # Leeren der gespeicherten Befehlsdaten
    -n file       # Einlesen einer Datei mit Befehlen in die History

    Beispiel: $ history 5 # gibt die letzten 5 Zeilen der History aus.

    Das !-Zeichen ermöglicht nun ein Aufrufen gesicherter Befehle.

    !!          #Ausführen des letzten Befehls
    !N          # Ausführen von Befehl Nr. N aus der History
    !cmd        # Ausführen des letzten Befehls der mit cmd anfängt.


cat [Option(en)] Argument(e)
    -t          # Anzeigen der Tabulatoren als Zeichen ^I
    -E          # Anzeigen des Endzeichens $ am Zeilenende
    -e          # Siehe -E


more Argument(e)
<ENTER>         # eine Zeile vor
<STRG>+d        # im Dokument vorwärts bewegen
<STRG>+b        # im Dokument rückwärts bewegen
N <Leertaste>   # Bewegen von N Zeilen nach vorne
N b             # N Zeilen nach oben bewegen
h               # Hilfe zu more-Befehlen
q               # Beendet more / Wie das Erreichen des Dokumentenendes


less Argument(e)
    q               # Beendet less
    h               # Ausführliche Hilfe zu less
    /               # Suche einleiten
    Pfeiltasten     # Vor- / Zurückbewegen im Dokument^


man         →       manual pages
apropos     →       wie man ­k
whatis      →       wie man ­f
whereis     →       liefert Informationen
                    wo eine manpage in der Verzeichnishierarchie liegt
                    sowie den Ort des Binaries (Befehls).
                    BEISPIEL:
                        -root@Wild ~ # whereis mkdir
                        -mkdir: /usr/bin/mkdir /usr/share/man/man2/mkdir.2.gz /usr/share/man/man1/mkdir.1.gz

which       →       durchsucht PATH nach Binärdatei (Befehlen)
info        →       das info-System (favorisiert durch die FSF)
                    z.B. info coreutils (GNU Basis Befehle)
Atype       →       Bestimmt den Typen (Art) eines Befehls
                    (Ort, gehasht (im Speicher), Bash builtin etc.)
                    file → Bestimmt den Typen (Art) einer Datei


Zeichen Beschreibungi Reguläre Ausdrücke
^       (frz. caret) Steht für den Zeilenanfang
$       (dollar) Steht für das Zeilenende
.       Ein beliebiges Zeichen
\<      Anfang eines Wortes
\>      Ende eines Wortes
\< \>   Angabe eines exakten Treffers (exact match) \<genau hier\>
[Z]     Bereichsklammern als Platzhalter eines Zeichens
        einzelnen Zeichens für diese Position
[^Z]    Negation: Alle Zeichen ausser diesem
        Bezogen auf das jeweils vorhergehende Zeichen besagen:
*       vorhergehendes Zeichen tritt 0 – beliebig oft auf
+       vorhergehendes Zeichen tritt 1 – beliebig oft auf
{n}     vorhergehendes Zeichen tritt mindestens und maximal n-mal auf
{n,}    vorhergehendes Zeichen tritt mindestens n-mal auf
{n,m}   vorhergehendes Zeichen tritt mindestens n-mal und maximal m-mal auf

Weiterhin
( )     gewöhnliches Klammern eines Ausdrucks
 |      ODER


